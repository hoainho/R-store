

// breakpoints

$XS:     320px;  
$S:     414px;   
$M:     769px;     
$L:     1025px; 
$XL:     1401px;     

// media queries

@mixin MQ($canvas) {
  @if $canvas == XS {
   @media only screen and (min-width: $XS) { @content; } 
  }
  @if $canvas == S {
   @media only screen and (min-width: $S) { @content; } 
  }
  @else if $canvas == M {
   @media only screen and (min-width: $M) { @content; } 
  }
  @else if $canvas == L {
   @media only screen and (min-width: $L) { @content; } 
  }
  @else if $canvas == XL {
   @media only screen and (min-width: $XL) { @content; } 
  }
}



// Paddings
$sm_header_height: 40px;
$sm_content_padding: 15px;

// Inner Modal Color
$segment_color: #ffffff;
$segmentborder_color: #ffffff;

// Fonts 
$primary-font: "Montserrat", sans-serif;
$maintextcolor: #404040;

//Colors
$red: #EF798A;
$tan: #E1D59A;
$green: #a9cd99;

// rem fallback - credits: http://zerosixthree.se/

@mixin transition($what, $speed, $ease, $delay) {
    -webkit-transition: $what $speed $ease $delay;
    -moz-transition: $what $speed $ease $delay;
    -ms-transition: $what $speed $ease $delay;
    -o-transition: $what $speed $ease $delay;
    transition: $what $speed $ease $delay;
}


// generic transform
@mixin transform($transforms) {
     -moz-transform: $transforms;
       -o-transform: $transforms;
      -ms-transform: $transforms;
  -webkit-transform: $transforms;
          transform: $transforms;
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
 
// scale
@mixin scale($scale) {
   @include transform(scale($scale));
} 
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}


@mixin box-shadow($top, $left, $blur, $depth, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $depth $color;
    -moz-box-shadow:inset $top $left $blur $depth $color;
    box-shadow:inset $top $left $blur $depth $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $depth $color;
    -moz-box-shadow: $top $left $blur $depth $color;
    box-shadow: $top $left $blur $depth $color;
  }
}
// border radius

@mixin border-radius($radius) {
  border-radius: $radius;
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
}


@mixin flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
}

%flexbox { @include flexbox; }

//----------------------------------

@mixin inline-flex {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -moz-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

%inline-flex { @include inline-flex; }

//----------------------------------------------------------------------

// Flexbox Direction
//
// The 'flex-direction' property specifies how flex items are placed in
// the flex container, by setting the direction of the flex container's
// main axis. This determines the direction that flex items are laid out in. 
//
// Values: row | row-reverse | column | column-reverse
// Default: row
//
// http://w3.org/tr/css3-flexbox/#flex-direction-property

@mixin flex-direction($value: row) {
  @if $value == row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
  } @else if $value == column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
  } @else if $value == column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
  } @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
  }
  -webkit-flex-direction: $value;
  -moz-flex-direction: $value;
  -ms-flex-direction: $value;
  flex-direction: $value;
}
  // Shorter version:
  @mixin flex-dir($args...) { @include flex-direction($args...); }

//----------------------------------------------------------------------

@mixin flex-wrap($value: nowrap) {
  // No Webkit Box fallback.
  -webkit-flex-wrap: $value;
  -moz-flex-wrap: $value;
  @if $value == nowrap {
    -ms-flex-wrap: none;
  } @else { 
    -ms-flex-wrap: $value; 
  }
  flex-wrap: $value;
}

//----------------------------------------------------------------------


@mixin flex-flow($values: (row nowrap)) {
  // No Webkit Box fallback.
  -webkit-flex-flow: $values;
  -moz-flex-flow: $values;
  -ms-flex-flow: $values;
  flex-flow: $values;
}

//----------------------------------------------------------------------


@mixin order($int: 0) {
  -webkit-box-ordinal-group: $int + 1;
  -webkit-order: $int;
  -moz-order: $int;
  -ms-flex-order: $int;
  order: $int;
}

//----------------------------------------------------------------------



@mixin flex-grow($int: 0) {
  -webkit-box-flex: $int;
  -webkit-flex-grow: $int;
  -moz-flex-grow: $int;
  -ms-flex-positive: $int;
  flex-grow: $int;
}

//----------------------------------------------------------------------



@mixin flex-shrink($int: 1) {
  -webkit-flex-shrink: $int;
  -moz-flex-shrink: $int;
  -ms-flex-negative: $int;
  flex-shrink: $int;
}

//----------------------------------------------------------------------


@mixin flex-basis($value: auto) {
  -webkit-flex-basis: $value;
  -moz-flex-basis: $value;
  -ms-flex-preferred-size: $value;
  flex-basis: $value;
}

//----------------------------------------------------------------------


@mixin flex($fg: 1, $fs: null, $fb: null) {
    

  $fg-boxflex: $fg;

  @if type-of($fg) == 'list' {
    $fg-boxflex: nth($fg, 1);
  }

  -webkit-box-flex: $fg-boxflex;
  -webkit-flex: $fg $fs $fb;
  -moz-box-flex: $fg-boxflex;
  -moz-flex: $fg $fs $fb;
  -ms-flex: $fg $fs $fb;
  flex: $fg $fs $fb;
}

//----------------------------------------------------------------------

@mixin justify-content($value: flex-start) {
  @if $value == flex-start {
    -webkit-box-pack: start;
    -ms-flex-pack: start;
  } @else if $value == flex-end {
    -webkit-box-pack: end;
    -ms-flex-pack: end;
  } @else if $value == space-between {
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
  } @else if $value == space-around {
    -ms-flex-pack: distribute;    
  } @else {
    -webkit-box-pack: $value;
    -ms-flex-pack: $value;
  }
  -webkit-justify-content: $value;
  -moz-justify-content: $value;
  justify-content: $value;
}
  // Shorter version:
  @mixin flex-just($args...) { @include justify-content($args...); }

//----------------------------------------------------------------------

@mixin align-items($value: stretch) {
  @if $value == flex-start {
    -webkit-box-align: start;
    -ms-flex-align: start;
  } @else if $value == flex-end {
    -webkit-box-align: end;
    -ms-flex-align: end;
  } @else {
    -webkit-box-align: $value;
    -ms-flex-align: $value;
  }
  -webkit-align-items: $value;
  -moz-align-items: $value;
  align-items: $value;
}

//----------------------------------

// Flexbox Align Self
//


@mixin align-self($value: auto) {
  // No Webkit Box Fallback.
  -webkit-align-self: $value;
  -moz-align-self: $value;
  @if $value == flex-start {
    -ms-flex-item-align: start;
  } @else if $value == flex-end {
    -ms-flex-item-align: end;
  } @else {
    -ms-flex-item-align: $value;
  }
  align-self: $value;
}

//----------------------------------------------------------------------

@mixin align-content($value: stretch) {
  // No Webkit Box Fallback.
  -webkit-align-content: $value;
  -moz-align-content: $value;
  @if $value == flex-start {
    -ms-flex-line-pack: start;
  } @else if $value == flex-end {
    -ms-flex-line-pack: end;
  } @else {
    -ms-flex-line-pack: $value;
  }
  align-content: $value;
}






html * {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
}
.sm_box {
	position: relative;
    width: 100%;
    height: 100%;
    padding: 1rem;
	&_pic{
		position: relative;
		width: 100%;
		height: 100%;
		padding: 1rem;
		border: 1px solid rgba($color-divider,.3);
		&_details{
		    width: 100%;
			height: 100%;
			position: relative;
		}
	}
	&_list{
		display: flex;
		flex-direction: row;
		justify-content: center;
		justify-items: center;
		position: relative;
		width: 100%;
		height: 100%;
		list-style-type: none;
		padding: 1rem 1rem 0;
		margin: 0 !important;
	}
	&_item
	{
		margin: .2rem;
		border: 1px solid orange;
		position: relative;
		width: 4vw !important;
		height: 8vh;
		cursor: pointer;
	}
	&_link{
		position: relative;
		width: 100%;
		height:100%;
	}
}
.sm-right{
	&--content
	{
		&_name{
			color: $color-primary;
			font-family: fantasy;
		}
		&_list{
			display: flex;
			flex-direction: column;
			justify-items: center;
			justify-content: center;
			list-style-type: none;
		}
		&_item{
			margin: .2rem .5rem;
			padding: 0 .5REM;
			border-left: 10px solid $color-primary;
			height: 4vh;
		}
		&_introduce{
			font-size: 1rem;
			position: relative;
			width: 40%;
			text-align: left;
		}
		&_ability{
			width: 100%;
			display: flex;
			border-top: 1px solid orange;
			&__status{
					width: 50%;
					border-right: 1px solid orange;
					border-bottom: 1px solid orange;
			}
			&__code{
				border-bottom: 1px solid orange;
				width: 50%;
			}
		}
		
	}
	&--rating{
		display: inline-block;
		text-align: unset;
		width: 100%;
		&_result{
			width: 100%;
			display: flex;
			flex-direction: row;
			&__summary{
				color: $color-primary;
				width: 50%;
				border-left: 1px solid $color-primary;
				border-bottom: 1px solid $color-primary;
				text-align: center;
			}
			}
			
		&_review{
			width: 42%;
			position: relative;
			color: #95989b;
			border-right: 1px solid $color-primary;
			border-bottom: 1px solid $color-primary;
			left: 5%;
		}
	}
		
	&--price{
		display: flex;
		width: 100%;
		&_present{
			width: 50%;
			border-right: 1px solid $color-primary;
			border-bottom: 1px solid $color-primary;
		}
		&_old{
			width: 40%;
			border-left: 1px solid $color-primary;
			border-bottom: 1px solid $color-primary;
			border-top: 0px;
			position: relative;
			left: 5%;
			&::before{
				top:55% !important;
    			border-top: 1px double $color-primary;
			}
		}
	}
	&--control{
		display: flex;
		flex-direction: row;
		width: 100%;
		margin-top: 3rem;
		&_box{
			width: 40%;
			border: 1px solid rgba($color-divider,.3);
			border-radius: 30px;
			margin: 0 1rem;
			position: relative;
		}
		&_reduction{
			position: relative;
			top: 15%;
			cursor: pointer;
			color: rgba($color-divider,.3);
			&:hover,
			&:active,
			&:link,
			&:visited{
				color: $color-primary;
			}
		}
		&_number{
			position: relative;
			margin: 0 2rem;	
			top: 15%;
		}
		&_increase{
			position: relative;
			top: 15%;
			cursor: pointer;
			color: rgba($color-divider,.3);
			&:hover,
			&:active,
			&:link,
			&:visited{
				color: $color-primary;
			}
		}
		&_add{
			width: 40%;
			left: 7%;
		}
	}
}
.sm-icon{
	&--item{
		transition: .01s ease-in-out .01s;
		&:hover,
		&:active,
		&:link,
		&:visited{
			background-color: $color-primary !important;
		}
		&:hover,
		&:active,
		&:link,
		&:visited &--link{
			color: $color-white !important;
		}
	} 
	&--link{
		
	}
}




	.holdmystuff {
		background: #ffffff;
		max-width: 60%;
		padding: 40px;
    @include border-radius(6px);
		@include box-shadow(0px, 0px, 80px, 0px, rgba(30,30,30,0.2));
		font-size: .9em;
		.holder_svg {
			svg {
				max-width: 40%;
			}
			padding-bottom: 25px;
			border-bottom: 1px solid #efefef;
			margin-bottom: 25px
		}
		p {
			padding-bottom: 20px;
			margin: 0 auto;
		}
		ul {
			padding: 0px;
			margin: 0 auto;
			list-style-type: none;
			li {
				display: inline-block;
				margin: 0 auto;
				background: #e9e9e9;
				color: #303030;
				padding: 10px;
				text-decoration: none;
				margin-bottom: 1px;
				a {
					display: table-cell;
				}
			}
			}
		}


.slim_modal 
.sm_content 
.sm_content_inner_wrap 
.sm_area_top, .slim_modal 
.sm_content .sm_content_inner_wrap 
.sm_area_bottom, 
.slim_modal 
.sm_content .sm_content_inner_wrap
 .sm_area_all {
	padding: 1rem !important;
}

// This is just a straightforward flexbox-based modal you can use as is, or to learn from and build-upon. I became frustrated doing over-ride css with the framework libraries out there (Foundation, Bootstrap, Semantic UI, etc.).

// OVERLAY
.slim_modal {
	position: fixed;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
	@include flexbox;
	@include align-items(center);
	@include justify-content(center);
	background: rgba(0,0,0,0.85);
	background-image:url('../../img/bgproducttab1.png');
	z-index: 13;
	display: none;
	font-size: 1em;
	@include transition(background, .5s, ease, .06s);
	&.none {
		background: rgba(10,10,10,0.0);;
	}
	&.red {
		background: rgba(darken($red, 20%) ,.8);
	}
	&.tan {
		background: rgba(darken($tan, 20%), .8);
	}
	&.green {
		background: rgba(darken($green, 20%), .8);
	}
	// MODAL ITSELF 
	.sm_content {
		@include MQ(XS) {padding: 0px;width: 100%;height: 100%;@include border-radius(0px);}
		@include MQ(S) {padding: 0px;width: 100%;height: 100%;@include border-radius(0px);}
		@include MQ(M) {padding: $sm_content_padding;width: 80%; max-height: 90%; height: auto;@include border-radius(4px);}
		@include MQ(L) {padding: $sm_content_padding;width: 80%;max-height: 90%; height: auto; @include border-radius(4px);}    
		@include MQ(XL) {padding: $sm_content_padding;width: 80%;max-height: 90%; height: auto; @include border-radius(4px);}
		background: darken($segment_color, 4%);
		text-align: center;
		max-width: 800px;
		
		// MODAL INNER SECTION
		.sm_content_inner_wrap {
			position: relative;
			margin: 0 auto;
			height: 100%;
			background: #ffffff;
			@include box-shadow(0px, 0px, 1px, 0, rgba(30,30,30, .5));
			z-index: 2;
			@include MQ(XS) {@include border-radius(0px);}
			@include MQ(S) {@include border-radius(0px);}
			@include MQ(M) {@include border-radius(4px);}
			@include MQ(L) {@include border-radius(4px);}    
			@include MQ(XL) {@include border-radius(4px);}
			.sm_close_button {
				padding: 10px;
				width: auto;
				display: block;
				background: #efefef;
			}
			// MODAL AREAS
			.sm_area_top, .sm_area_bottom, .sm_area_all {
				padding: 4em;
				h3 {
					span {
						display: block;
						font-size: .7em;
					}
				}
			}
			.sm_area_top {
				background: rgba(30,30,30, .02);
			}
			.sm_area_bottom {
				background: rgba(255,255,255, 1);
			}
		}
	

		// MODAL - Slide out icon menu...including a close button (".sm_close").
		.sm_icon_menu {
			ul {
				list-style-type: none;
				padding: 0;
				margin: 0 auto;
				li {
					font-size: 1.1em;
					height: 3em;
					line-height: 3em;
					background: darken(#ffffff, 10%);
					padding: 0px 8px 0px 8px;
					margin-bottom:1px;
					color: rgba(30,30,30, .4);
					@include transition(all, .5s, ease, 0s);
					&.sm_close {
						background: #ffffff;
					}
					&:nth-child(2) {
						margin-top: 10px;
					}
					&:hover {
						background: #ffffff;
						color: rgba(30,30,30, .7);
					}
					&::last-child {
						border: none;
					}
				}
			}
			&.is_right {
				right: 0px;
				@include border-radius(0px 4px 4px 0px);
				@include MQ(XS) {top: 70px;right: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(S) {top: 70px;right: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(M) {top: $sm_content_padding;right: ($sm_content_padding );z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}
				@include MQ(L) {top: $sm_content_padding;right: ($sm_content_padding);z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}    
				@include MQ(XL) {top: $sm_content_padding;right: ($sm_content_padding);z-index: 1;@include box-shadow(15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-left: none;}
			}
			&.is_left {
				@include border-radius(4px 0px 0px 4px);
				@include MQ(XS) {top: 70px;left: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(S) {top: 70px;left: 0px;z-index: 9;@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.0));padding: 1px;border: none;}
				@include MQ(M) {top: $sm_content_padding;left: ($sm_content_padding );z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}
				@include MQ(L) {top: $sm_content_padding;left: ($sm_content_padding);z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}    
				@include MQ(XL) {top: $sm_content_padding;left: ($sm_content_padding);z-index: 1;@include box-shadow(-15px, 0px, 30px, 0px, rgba(30,30,30,0.2));border: 1px solid rgba(30,30,30, .1);border-right: none;}
			}
			opacity: 1;
			box-sizing: border-box;
			position: absolute;
			top: 40px;
			background: darken($segment_color, 4%);
			@include transition(all, .3s, ease, 0s);
		}
		.sm_header {
			font-family: serif;
			box-sizing: border-box;
			right: 0;
			left: 0;
			top: 0;
			bottom: 0;
			color: transparent; 
			-webkit-text-stroke: 0.1rem $color-primary;
			font-weight: 900;
			font-size: 2rem;
			text-transform: uppercase;
			margin: 0 auto;
			display: inline-block;
			height: $sm_header_height;
			line-height: $sm_header_height;
			opacity: 0;
			
			@include transition(all, .3s, ease, 0s);
			@include MQ(XS) {position: relative;width: 100%;background: darken(#ffffff, 10%);@include border-radius(0px);padding-top: 0;}
			@include MQ(S) {position: relative;width: 100%;background: darken(#ffffff, 10%);@include border-radius(0px);padding-top: 0;}
			@include MQ(M) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}
			@include MQ(L) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}    
			@include MQ(XL) {position: absolute;width: 90%;background: darken($segment_color, 4%);@include border-radius(4px 4px 0px 0px);padding-top: $sm_content_padding/2;text-align: center;}
		}
		&.pushup {
			@include transform(scale(.98) translateY(20px));
			@include transition(all, .5s, ease, 0s);
			@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.4));
			opacity: 0;
			&.show {
				@include box-shadow(0px, 20px, 80px, 0px, rgba(30,30,30,0.4));
				opacity: 1;
			}
		}
		&.pushdown {
			@include transform(scale(.98) translateY(-20px));
			@include transition(all, .5s, ease, 0s);
			@include box-shadow(0px, 0px, 0px, 0px, rgba(30,30,30,0.4));
			opacity: 0;
			&.show {
				@include box-shadow(0px, -20px, 80px, 0px, rgba(30,30,30,0.4));
				opacity: 1;
			}
		}
		&.show {
			@include transform(scale(1));
			@include transition(all, .3s, ease, 0s);
			.sm_icon_menu {
				@include transition(all, .5s, ease, .06s);

				&.is_right {
					@include MQ(XS) {top: 70px;right: 0px;}
					@include MQ(S) {top: 70px;right: 0px;}
					@include MQ(M) {top: $sm_content_padding ;right: -25px;}
					@include MQ(L) {top: $sm_content_padding ;right: -25px;}   
					@include MQ(XL) {top: $sm_content_padding;right: -25px;}
				}
				&.is_left {
					@include MQ(XS) {top: 70px;left: 0px;}
					@include MQ(S) {top: 70px;left: 0px;}
					@include MQ(M) {top: $sm_content_padding ;left: -25px;}
					@include MQ(L) {top: $sm_content_padding ;left: -25px;}   
					@include MQ(XL) {top: $sm_content_padding;left: -25px;}
				}
			}
			.sm_header {
				@include transition(top, .5s, ease, .1s);
				@include MQ(XS) {top: 0px;z-index: 9;}
				@include MQ(S) {top: 0px;z-index: 9}
				@include MQ(M) {top: -$sm_header_height;z-index: 1;}
				@include MQ(L) {top: -$sm_header_height;z-index: 1;}    
				@include MQ(XL) {top: -$sm_header_height;z-index: 1;}
				opacity: 1;	
				&.detached {
					@include transition(opacity, .5s, ease, .1s);
					@include border-radius(4px);
					background: rgba(0,0,0, .9);
					color: rgba(255,255,255, .8);
					@include MQ(XS) {top: 0px;z-index: 9;}
					@include MQ(S) {top: 0px;z-index: 9}
					@include MQ(M) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}
					@include MQ(L) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}    
					@include MQ(XL) {top: -($sm_header_height + 20);padding-top: 0;z-index: 1}	
				}			
			}
		}
	

	
	
}

}
 
 .sm_content {
 	&.red {
	background: $red;
	.sm_header {
			background: $red;
			color: #ffffff;
		}
	}
	&.tan {
	background: $tan;
	.sm_header{
			background: $tan;
			color: #ffffff;
		}
	}
	&.green {
		background: $green;
		.sm_header {
			background: $green;
			color: #ffffff;
		}
	}
 }

